<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lamp.dao.TPlatformSettingMapper" >
    <!--查询IOT平台初始化-->
    <select id="telecomManageList" resultType="java.util.Map">
      SELECT tm.*,CASE tm.telecom_type WHEN 1 THEN '开启' ELSE '关闭' END typename FROM telecom_manage tm;
    </select>
    <update id="updateTelecomManage" parameterType="java.lang.Integer">
      UPDATE telecom_manage SET telecom_type = 1 WHERE id = #{id}
    </update>
    <!--根据ID查询初始化-->
    <select id="telecomManage" resultType="java.util.Map">
        SELECT tm.* typename FROM telecom_manage tm
        WHERE tm.id = #{id} AND tm.telecom_type = 0;
    </select>
    <!--根据ID查询-->
    <select id="getPlatDataByID" resultType="java.util.Map">
        SELECT d.* FROM iot_dianxin d
         WHERE d.id = #{id}
    </select>
    <!--查询IOT平台密钥-->
    <select id="getPlatData" resultType="java.util.Map">
        SELECT d.id,d.appid,d.secret,d.accessToken,d.tokenTime FROM iot_dianxin d
        LEFT JOIN sys_user u ON d.org_id = u.org_id
        WHERE d.oper_id = #{userId}
    </select>
    <!--查询所有的组织信息-->
    <select id="getOrganizationList" resultType="java.util.Map">
        SELECT org.id,org.org_name AS orgName FROM organization AS org
        LEFT JOIN sys_user AS u ON org.operId = u.id
        WHERE org.org_code like CONCAT('%',#{orgCode},'%') AND
        org.del_flag = 0 AND org.super_org = 0 AND org.pid =13;
    </select>
    <!--根据code号查询电信sim卡号-->
    <select id="getTcontroller" resultType="com.lamp.model.Tcontroller">
        SELECT cont.* FROM controller AS cont
        LEFT JOIN nbiot_manage AS nb ON cont.nboit_manage_id = nb.id
        WHERE nb.nb_code = #{nbCode};
    </select>
    <!--删除平台设置-->
    <delete id="delPlatFomSettingById" parameterType="java.lang.Integer">
        DELETE FROM iot_dianxin WHERE id = #{id}
    </delete>

    <!--增加iot-->
    <insert id="saveDianXiIotData" parameterType="com.lamp.model.TDianXiIot">
        INSERT INTO iot_dianxin
        <trim prefix=" ( " suffix=" ) " suffixOverrides=",">
            <if test="iotAddress != null">
                iot_address,
            </if>
            <if test="appId != null">
                appId,
            </if>
            <if test="secret != null">
                secret,
            </if>
            <if test="operId != null">
                oper_id,
            </if>
            <if test="operTime != null">
                oper_time,
            </if>
            <if test="serviceAddress != null">
                service_address,
            </if>
            <if test="orgId != null">
                org_id,
            </if>
            <if test="iotType != null">
                iot_type,
            </if>
            <if test="accessToken != null">
                accessToken,
            </if>
            <if test="tokenTime != null">
                tokenTime,
            </if>
        </trim>
        <trim prefix=" VALUES ( " suffix=" ) " suffixOverrides=",">
            <if test="iotAddress != null">
                #{iotAddress},
            </if>
            <if test="appId != null">
                #{appId},
            </if>
            <if test="secret != null">
                #{secret},
            </if>
            <if test="operId != null">
                #{operId},
            </if>
            <if test="operTime != null">
                #{operTime},
            </if>
            <if test="serviceAddress != null">
                #{serviceAddress},
            </if>
            <if test="orgId != null">
                #{orgId},
            </if>
            <if test="iotType != null">
                #{iotType},
            </if>
            <if test="accessToken != null">
                #{accessToken},
            </if>
            <if test="tokenTime != null">
                #{tokenTime},
            </if>
        </trim>
    </insert>

    <select id="getDianXiIotData" resultType="java.util.Map">
        select d.*,o.org_name AS orgName,CASE d.iot_type WHEN 1 THEN '电信' END iotType,u.real_name from iot_dianxin d
        left join organization o on d.org_id = o.id
        left join sys_user u on d.oper_id = u.id
        WHERE 1=1
        <if test="id != null">
            AND  d.id = #{id}
        </if>
        <if test="orgId != null">
            AND d.org_id = #{orgId}
        </if>
    </select>

    <select id="getDianXiIotDataById" resultType="java.util.Map" parameterType="java.lang.Integer">
        select d.*,u.real_name from iot_dianxin d
        left join sys_user u on d.oper_id = u.id
        where d.id = #{id}
    </select>

    <update id="updateDianXiIotDataById" parameterType="com.lamp.model.TDianXiIot">
        update iot_dianxin set
        <trim prefix="" suffix="" suffixOverrides=",">
            <if test="iotAddress != null">
                iot_address = #{iotAddress},
            </if>
            <if test="appId != null">
                appid = #{appId},
            </if>
            <if test="secret != null">
                secret = #{secret},
            </if>
            <if test="operId != null">
                oper_id = #{operId},
            </if>
            <if test="operTime != null">
                oper_time = #{operTime},
            </if>
            <if test="serviceAddress != null">
                service_address = #{serviceAddress},
            </if>
            <if test="orgId != null">
                org_id = #{orgId},
            </if>
            <if test="iotType != null">
                iot_type = #{iotType},
            </if>
            <if test="accessToken != null">
                accessToken = #{accessToken},
            </if>
            <if test="tokenTime != null">
                tokenTime = #{tokenTime},
            </if>
        </trim>
        where id  = #{id}
    </update>

    <select id="getChanYeYuanIot" parameterType="java.util.HashMap" resultType="java.util.Map">
        select c.id,case c.protocol_type when 0 then 'UDP协议' else 'COAP协议' end protocol_type,c.iot_address,c.oper_time,u.real_name from iot_chanyeyuan c
        left join sys_user u on c.oper_id = u.id
        <choose>
            <when test="orderBy == null or orderBy == ''">
                order by str_to_date(c.oper_time,'%Y-%m-%d %H:%i:%s') desc
            </when>
            <when test="'protocol_type' == orderBy">
                order by protocol_type ${sort}
            </when>
            <when test="'iot_address' == orderBy ">
                order by iot_address ${sort}
            </when>
            <when test="'real_name' == orderBy">
                order by real_name ${sort}
            </when>
            <when test="'oper_time' == orderBy">
                order by c.oper_time ${sort}
            </when>
            <otherwise>
                order by str_to_date(c.oper_time,'%Y-%m-%d %H:%i:%s') desc
            </otherwise>
        </choose>
    </select>

    <select id="getChanYeYuanIotById" parameterType="integer" resultType="java.util.HashMap">
        select * from iot_chanyeyuan where id = #{id}
    </select>

    <update id="updateChanYeYuanIot" parameterType="java.util.HashMap">
        update iot_chanyeyuan set iot_address = #{address},oper_id = #{operId},oper_time = #{operTime} where id = #{id}
    </update>

    <insert id="insertPowerrate" parameterType="com.lamp.model.TPowerRate" >
        insert into power_rate (power_rate,org_id,oper_id,oper_time)
        values (#{powerRate},#{orgId},#{operId},#{operTime})
    </insert>

    <update id="updatePowerRate" parameterType="com.lamp.model.TPowerRate" >
        update power_rate set power_rate = #{powerRate},oper_id = #{operId},oper_time = #{operTime}
        where id = #{id}
    </update>

    <select id="getPowerRateCount" parameterType="java.util.HashMap"  resultType="integer">
        select count(1)  from power_rate p
        left join organization o on p.org_id = o.id
        where o.del_flag = 0 and o.org_code LIKE CONCAT('%',#{orgCode},'%')
    </select>

    <select id="getPowerRateList" parameterType="java.util.HashMap" resultType="java.util.Map">
        select p.id,power_rate,u.real_name,o.org_name,p.oper_time from power_rate p
        left join organization o on p.org_id = o.id
        left join sys_user u on p.oper_id = u.id
        and o.del_flag = 0 and o.org_code LIKE CONCAT('%',#{orgCode},'%')
        <choose>
            <when test="'power_rate' == orderBy">
                order by power_rate ${sort}
            </when>
            <when test="'org_name' == orderBy">
                order by org_name ${sort}
            </when>
            <when test="'real_name' == orderBy">
                order by real_name ${sort}
            </when>
            <when test="'oper_time' == orderBy">
                order by str_to_date(p.oper_time,'%Y-%m-%d %H:%i:%s') ${sort}
            </when>
            <otherwise>
                order by str_to_date(p.oper_time,'%Y-%m-%d %H:%i:%s') desc
            </otherwise>
        </choose>
        limit #{num},#{showNum}
    </select>

    <select id="getPowerRateById" parameterType="integer" resultType="java.util.Map" >
        select id,power_rate from power_rate where id = #{id}
    </select>

    <select id="countGetLogoInfo" parameterType="java.util.HashMap" resultType="integer">
        select count(1) from logo l
        left join organization o on l.orgid = o.id
        where o.org_code like CONCAT('%',#{orgCode},'%') and o.del_flag = 0
    </select>

    <select id="getLogoInfo" parameterType="java.util.HashMap" resultType="java.util.Map">
        select l.*,o.org_name,u.real_name from logo l
        left join organization o on l.orgid = o.id
        left join sys_user u on l.operid = u.id
        where o.org_code like CONCAT('%',#{orgCode},'%') and o.del_flag = 0
        <choose>
            <when test="'imager' == orderBy">
                order by imager ${sort}
            </when>
            <when test="'name' == orderBy">
                order by l.name ${sort}
            </when>
            <when test="'real_name' == orderBy ">
                order by u.real_name ${sort}
            </when>
            <when test="'org_name' == orderBy">
                order by o.org_name ${sort}
            </when>
            <when test="'uptime' == orderBy">
                order by l.uptime ${sort}
            </when>
            <otherwise>
                order by str_to_date( l.uptime,'%Y-%m-%d %H:%i:%s') desc
            </otherwise>
        </choose>
    </select>

    <update id="updateLogoInfo" parameterType="com.lamp.model.Tlogo">
        update logo set imager = #{imager},name = #{name},operid = #{operid},uptime = #{uptime} where id = #{id}
    </update>

    <select id="getLogoInfoById" parameterType="integer" resultType="java.util.HashMap">
        select * from logo where id = #{id}
    </select>

    <select id="getCityDataNum" parameterType="java.util.HashMap" resultType="integer">
        select count(*) from lamp_city_setting l
        left join organization o on l.org_id = o.id
        where o.org_code like CONCAT('%',#{orgCode},'%') and o.del_flag = 0
    </select>

    <select id="getCityData" parameterType="java.util.HashMap" resultType="java.util.Map">
        select l.*,u.real_name,o.org_name from lamp_city_setting l
        left join sys_user u on l.operid = u.id
        left join organization o on o.id = l.org_id
        where o.org_code like  CONCAT('%',#{orgCode},'%')
        <choose>
            <when test="orderBy == null or orderBy == ''or orderBy == 'oper_time'">
                order by str_to_date(l.oper_time,'%Y-%m-%d %H:%i:%s') ${sort}
            </when>
            <when test="'city_name' == orderBy">
                order by l.city_name ${sort}
            </when>
            <when test="'longitude' == orderBy ">
                order by l.longitude ${sort}
            </when>
            <when test="'latitude' == orderBy ">
                order by l.latitude ${sort}
            </when>
            <when test="'org_name' == orderBy ">
                order by o.org_name ${sort}
            </when>
            <when test="'real_name' == orderBy">
                order by u.real_name ${sort}
            </when>
            <otherwise>
                order by str_to_date(l.oper_time,'%Y-%m-%d %H:%i:%s') desc
            </otherwise>
        </choose>
        limit #{num},#{showNum}
    </select>

    <select id="getCityDataById" parameterType="integer" resultType="java.util.Map">
        select * from lamp_city_setting where id = #{id}
    </select>

    <update id="updateCityData" parameterType="com.lamp.model.TCitySetting">
        update lamp_city_setting set city_name = #{cityName},longitude = #{lo},latitude = #{la},
        operid = #{operId},oper_time = #{oper_time},low_temperature=#{lowTemp},high_temperature=#{heightTemp},
        temperature_detail=#{tempDetail},weather_pic=#{weatherPic},sunrise=#{sunRise},sunset=#{sunSet}
        where id = #{id}
    </update>

</mapper>
